version: 2
jobs:
  go:
    docker:
      - image: circleci/golang:stretch
    environment:
      PROTOC_VERSION: "3.1.0"
    working_directory: /go/src/github.com/pingcap/kvproto
    steps:
      - checkout
      - run:
          name: Download protoc
          # Define variables that need interpolation
          # As CircleCI's each `run` declaration starts a new shell, we need to persist them to $BASH_ENV
          command: |
            echo 'export PATH=$HOME/.local/bin:$PATH' >> $BASH_ENV
            curl -OL https://github.com/google/protobuf/releases/download/v$PROTOC_VERSION/protoc-$PROTOC_VERSION-linux-x86_64.zip
            unzip protoc-$PROTOC_VERSION-linux-x86_64.zip -d $HOME/.local
      - run:
          name: Test Golang
          command: make go
          no_output_timeout: 1800s

  rust:
    docker:
      - image: circleci/rust:stretch
    environment:
      RUST_TEST_THREADS: "1"
      RUST_BACKTRACE: "1"
      RUSTFLAGS: "-Dwarnings"
      PROTOC_VERSION: "3.1.0"
    steps:
      - checkout
      - run:
          name: Download protoc
          command: |
            echo 'export PATH=$HOME/.local/bin:$PATH' >> $BASH_ENV
            curl -OL https://github.com/google/protobuf/releases/download/v$PROTOC_VERSION/protoc-$PROTOC_VERSION-linux-x86_64.zip
            unzip protoc-$PROTOC_VERSION-linux-x86_64.zip -d $HOME/.local
            sudo apt install -y cmake golang
      - run:
          name: Test Rust
          command: make rust
          no_output_timeout: 1800s

workflows:
  version: 2
  ci-test:
      jobs:
        - go
        - rust
