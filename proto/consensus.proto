syntax = "proto3";
package proto;

import "common.proto";
import "block.proto";
import "eraftpb.proto";


message BroadcastResponse {
    // Status code, which may be used to programatically respond to success/failure
    Status status = 1;
    // Info string which may contain additional information about the status returned
    string info = 2;
}

message DeliverResponse {
    oneof Type {
        Status status = 1;
        Block block = 2;
    }
}

service AtomicBroadcast {
    rpc Broadcast(ChannelHeader) returns (BroadcastResponse) {}
    rpc Deliver(stream Envelope) returns (stream DeliverResponse) {}
}


// consensus node to node communication
service Consensus {
    rpc Exchange (stream Envelope) returns (stream Envelope) {}
}

/*
|\_ Envelope
    \_ NetMessage
*/

message NetMessage {
    oneof Type {
        bytes data = 1;
        eraftpb.ConfChange config_change = 2;
        eraftpb.Message raft_message = 3;
    }
}
